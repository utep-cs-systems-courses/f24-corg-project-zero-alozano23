#comments begin with #

# For convenience, define variable $(OBJS) to list of object files
OBJS = draw_shapes.o draw_chars.o 8x12-font.o 5x7-font.o uimain.o

# Compiler flags for debugging and optimization
CFLAGS = -g -O3  # -g for debug, -O3 for optimization

# The first target is built by default. Usually named "all"
all: asciidraw

# asciidraw (target) depends on all object files (prerequisites)
asciidraw: $(OBJS)
	gcc $(CFLAGS) -o asciidraw $(OBJS)  # Use gcc for linking

	# Rule to build each object file from corresponding C file
	# # Assuming the file names match; adjust if necessary	
draw_shapes.o: draw_shapes.c draw.h
	gcc $(CFLAGS) -c draw_shapes.c -o draw_shapes.o

draw_chars.o: draw_chars.c draw.h
	gcc $(CFLAGS) -c draw_chars.c -o draw_chars.o

5x7-font.o: 5x7-font.c draw.h
	gcc $(CFLAGS) -c 5x7-font.c -o 5x7-font.o
8x12-font.o: 8x12-font.o draw.h
	gcc $(CFLAGS) -c 8x12-font.c -o 8x12-font.o
uimain.o: uimain.c draw.h
	gcc $(CFLAGS) -c uimain.c -o uimain.o

# Deletes files generated by compilation
clean:
	rm -f *.o asciidraw

# Run the executable after building it
run: asciidraw
	 ./asciidraw

